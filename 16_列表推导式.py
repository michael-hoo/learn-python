'''
列表推导式: 它是一种得到列表的方式.
'''
print('*1-' * 20)
# 1. 列表生成式的基本操作
# 练习1: 获得一个存放数字 1~20 的列表.
## 用 for 循环实现
l = []
for i in range(1, 21):
    l.append(i)
print(l) # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

## 用列表生成式实现
l = [i for i in range(1, 21)] # 代码会简洁许多.
print(l)

# 练习2: 获得一个存放数字 1~9 中奇数的平方的列表.
## 用 for 循环实现
l = []
for i in range(1, 10, 2): # range() 中可以使用 step.
    l.append(i * i)
print(l) # [1, 9, 25, 49, 81]

## 用列表生成式实现
l = [i*i for i in range(1, 10, 2)]
print(l)


print('*2-' * 20)
# 2. 列表生成式的 if 语句
# 练习3: 将 1~100 之间的所有偶数存放在列表中.
## 使用 for 实现
l = []
for i in range(1, 101):
    if i % 2 == 0: # i 可以被2整除, 就说明它是一个偶数.
        l.append(i)
print(l)

## 使用列表生成式实现
'''
注意: 列表生成式的一般写作顺序是: 1. for循环; 2. if判断; 3. 变量i及其操作.
'''
l = [i for i in range(1, 101) if i % 2 == 0]
print(l)


print('*3-' * 20)
# 3. 列表生成式的 if...else 语句
l1 = ['62', 'hello', '100', 'WORLD']
# 练习4: 将 l1 中所有以 h 开头的元素首字母大写, 其余元素全部小写.
## 用 for 实现
l2 = []
for i in l1:
    if i.startswith('h'):
        l2.append(i.capitalize()) # 首字母大写之后, 追加到 l2 中.
    else:
        l2.append(i.lower()) # 全部变成小写之后, 追加到 l2 中.
print(l2) # ['62', 'Hello', '100', 'world']

## 用列表生成式实现
'''
注意 if...else 下的列表生成式写法的区别!
'''
l2 = [i.title() if i.startswith('h') else i.lower() for i in l1]
print(l2) # ['62', 'Hello', '100', 'world']

# 练习5: 将列表 [1, 2, 3, ..., 100] 分组, 变成 [[1,2,3], [4,5,6], ...] 格式.
a = [i for i in range(1, 101)] # 先生成源数组
print(a)

## 我的方法
l = [[i, i+1, i+2] for i in a if (i-1) % 3 == 0]
print(l) # 但这个方法最后一组会产生 [100, 101, 102] 显然不对.

## 列表生成式加切片⭐️
l = [a[i:i+3] for i in range(0, len(a), 3)]
'''
代码逻辑分析:
    - 通过 range(0, len(a), 3) 产生一个 0, 3, 6, 9...的序列, 它表示的是对 a 切片的断点的下标!
    - 使用 for 循环对上述序列进行遍历, 不断取到断点处的下标.
    - 使用 a[i:i+3] 对列表 a 进行切片, 第一段是 a[0:3] -> [1, 2, 3], 最后一段是 a[99:102] -> [100]
        - 这个方法的巧妙之处在于: 切片的下标超出源列表没有关系, 它表示切到列表末尾.
'''
print(l)